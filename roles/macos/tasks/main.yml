- name: Create file /etc/sudoers.d/custom
  ansible.builtin.template:
    src: sudoers.d/custom.j2
    dest: /etc/sudoers.d/custom
    owner: root
    group: wheel
    mode: 0640
  become: yes

- name: Check if Xcode Command Line Tools is installed
  ansible.builtin.command: xcode-select -p
  register: xcode_select
  changed_when: false

# TODO: Verify after moving over to new MacBook Pro.
- name: Install Xcode Command Line Tools
  ansible.builtin.command: xcode-select --install
  when: xcode_select.stdout != "/Library/Developer/CommandLineTools"

# FIXME: Install Homebrew.
#- name: Set directory permission /opt/homebrew
#  ansible.builtin.file:
#    path: /opt/homebrew
#    state: directory
#    owner: "{{ ansible_env.USER }}"
#    mode: 0700
#  become: yes
#
#  ...

- name: Create directory {{ path_home }}/Applications
  ansible.builtin.file:
    path: "{{ path_home }}/Applications"
    state: directory
    mode: 0700

- name: Upgrade all packages
  community.general.homebrew:
    update_homebrew: yes
    upgrade_all: yes
  register: brew

- name: "Upgrade all packages : debug"
  ansible.builtin.debug:
    var: brew.changed_pkgs

- name: Install misc packages
  community.general.homebrew:
    name:
      - ansible
      - ansible-lint
      - bash
      - coreutils
      - curl
      - figlet
      - flake8
      - git
      - golang
      - grep
      - html2text
      - less
      - links
      - neovim
      - nmap
      - openssh
      - pylint
      - python
      - renameutils
      - rsync
      - ruby
      - shellcheck
      - tidy-html5
      - tmux
      - tree
      - vim
      - wget
      - yamllint
      - zsh
    state: latest
  register: brew

- name: "Install misc packages : debug"
  ansible.builtin.debug:
    var: brew.changed_pkgs

- name: Install misc applications
  community.general.homebrew_cask:
    name:
      - docker
      - google-chrome
      - hammerspoon
      - visual-studio-code
    state: latest
    install_options: appdir=~/Applications
  register: brew

- name: "Install misc applications : debug"
  ansible.builtin.debug:
    var: brew.msg

# TODO: Adjust name & line after moving over to new MacBook Pro.
#- name: Add /opt/homebrew/bin/zsh to /etc/shells
- name: Add /usr/local/bin/zsh to /etc/shells
  ansible.builtin.lineinfile:
    path: /etc/shells
#    line: /opt/homebrew/bin/zsh
    line: /usr/local/bin/zsh

- name: Create directory {{ path_home }}/.terminfo/74
  ansible.builtin.file:
    path: "{{ path_home }}/.terminfo/74"
    state: directory
    mode: 0700

# TODO: Adjust src & dest after moving over to new MacBook Pro.
- name: Create misc symbolic links
  ansible.builtin.file:
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
    state: link
  loop:
#    - src: /opt/homebrew/bin/ggrep
#      dest: /opt/homebrew/bin/grep
#    - src: /opt/homebrew/bin/gls
#      dest: /opt/homebrew/bin/ls
    - src: /usr/local/bin/ggrep
      dest: /usr/local/bin/grep
    - src: /usr/local/bin/gls
      dest: /usr/local/bin/ls
    - src: "{{ path_dotfiles }}/vscode/keybindings.json"
      dest: "{{ path_home }}/Library/Application Support/Code/User/keybindings.json"
    - src: "{{ path_dotfiles }}/vscode/settings.json"
      dest: "{{ path_home }}/Library/Application Support/Code/User/settings.json"
    - src: "{{ path_dotfiles }}/Misc/Swedish-Pro-No_Dead_Keys.bundle"
      dest: "{{ path_home }}/Library/Keyboard Layouts/Swedish-Pro-No_Dead_Keys.bundle"
    - src: "{{ path_dotfiles }}/Misc/tmux-256color"
      dest: "{{ path_home }}/.terminfo/74/tmux-256color"
    - src: "{{ path_projects }}/Tim/tim"
      dest: "{{ path_home }}/Scripts/tim"

- name: Execute misc 'defaults' and 'chflags' commands
  ansible.builtin.command:
    cmd: "{{ item.cmd }}"
  loop:
    - cmd: chflags nohidden ~/Library
    - cmd: defaults write com.microsoft.VSCode ApplePressAndHoldEnabled -bool false
  changed_when: false

- name: Check desktop wallpaper
  ansible.builtin.command:
    cmd: sqlite3 ~/Library/Application\ Support/Dock/desktoppicture.db "SELECT value FROM data ORDER BY ROWID DESC LIMIT 1"
  register: dock_wallpaper
  changed_when: false

- name: Set desktop wallpaper
  ansible.builtin.command:
    cmd: sqlite3 ~/Library/Application\ Support/Dock/desktoppicture.db "{{ item.sql }}"
  loop:
    - sql: DELETE FROM data
    - sql: DELETE FROM pictures
    - sql: DELETE FROM preferences
    - sql: "INSERT INTO data (value) VALUES ('{{ path_wallpaper }}')"
    - sql: INSERT INTO preferences (key, data_id, picture_id) VALUES (1, 1, 1)
  notify: restart dock
  when: path_wallpaper not in dock_wallpaper.stdout

- name: Check installed Visual Studio Code extensions
  ansible.builtin.command:
    cmd: code --list-extensions
  register: code_extensions
  changed_when: false

- name: Install Visual Studio Code extensions
  ansible.builtin.command:
    cmd: code --install-extension "{{ item.name }}"
  loop:
    - name: asvetliakov.vscode-neovim
    - name: golang.go
    - name: ms-azuretools.vscode-docker
    - name: ms-python.python
    - name: ms-python.vscode-pylance
    - name: ms-vscode-remote.remote-containers
    - name: ms-vscode-remote.remote-ssh
    - name: ms-vscode-remote.remote-ssh-edit
    - name: redhat.ansible
    - name: redhat.vscode-yaml
  when: item.name not in code_extensions.stdout
